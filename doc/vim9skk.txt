*vim9skk.txt*	Vim9 Scriptで実装したSKK日本語入力プラグイン

Author  : utubo
License : MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

==============================================================================
CONTENTS					*vim9skk-contents*

INTRODUCTION			|vim9skk-introduction|
USAGE				|vim9skk-usage|
INTERFACE			|vim9skk-interface|
  VARIABLES			  |vim9skk-variables|
  COMMANDS			  |vim9skk-commands|
  FUNCTIONS			  |vim9skk-functions|
  EVENTS			  |vim9skk-events|
  HIGHLIGHTS			  |vim9skk-highlights|
TODO				|vim9skk-todo|
CHANGELOG			|vim9skk-changelog|


==============================================================================
INTRODUCTION					*vim9skk-introduction*

*vim9skk* は、Vim9 Scriptで実装したSKK日本語入力プラグインです
`CursorMovedC`を利用しています(9.1.766以降で動作確認済みです)

Latest version:
https://github.com/utubo/vim-vim9skk.vim


==============================================================================
USAGE						*vim9skk-usage*

挿入モードで`<C-j>`で起動します
基本的にはよくあるSKKの入力形式と同様です
(まだ実装されていないものが多々ありますが…)

一度変換した候補は、見出しモード中にポップアップで表示されます
ひらがなモードまたはカタカナモードで以下の変換が用意されています
	`z<Space>` 全角スペース
	`z.` …
	`z/` ・
	`z[` 「
	`z]` 」
	`zh` ←
	`zj` ↓
	`zk` ↑
	`zl` →

変換候補、入力モード、変換範囲の表示にpopup-windowを使っています
`C-c`などは挙動がおかしくなることがあるので気をつけてください
tabpanelが左にあるとコマンドラインでの表示位置がずれます
プラグインでは対応できないのでtabpanelを右に表示するなどしてください

==============================================================================
INTERFACE					*vim9skk-interface*

------------------------------------------------------------------------------
VARIABLES					*vim9skk-variables*

g:vim9skk_mode					*g:vim9skk_mode*
	現在の入力モード
	statuslineなどにお使いください
	以下の様にユーザーイベントを利用するとリアルタイムで更新できます
>
	autocmd User Vim9skkModeChanged redraws!
<
g:vim9skk					*g:vim9skk*
	各種設定
	jisyo
		辞書ファイルのパスの配列
		`ファイル名:文字コード`の形式
		ワイルドカードはvim9skkの初回起動時に展開します
	jisyo_user
		ユーザー辞書ファイルのパス
	jisyo_recent
		「最後に実行した変換」辞書ファイルのパス
		「最後に実行した変換」辞書はvimを閉じるときに保存されます
	recent
		「最後に実行した変換」辞書の最大件数
	parens
		全角括弧のリストです
		この文字列に変換した場合、カーソルを1つ左に移動します
	marker_okuri
		送り仮名のマーカーです
		デフォルト: `*`
	mode_label
		現在のモードを表す文字です
		ポップアップします
	mode_label_timeout
		vim9skkがオフになったときに
		現在のモードポップアップの表示を残しておく時間(ミリ秒)
	popup_maxheight
		変換候補の最大表示行数です
		0で非表示
	search_limit
		候補探索の試行上限です
	disable_default_mappings
		起動時にデフォルトのキーマップを割り当てないようにします
	keymap
		キーマップです
		空文字を指定すると割り当て無しにできます
		toggle
			vim9skkのオンオフをトグルします
			全角英数モードやabbrevモードの場合は、ひらがなモードへ切り替えます
		enable
			vim9skkを有効にします
		disable
			vim9skkを無効にします
		kana
			カナモードをトグルします
		hankaku
			半角カナモードをトグルします
		alphabet
			全角英数モードをトグルします
		abbr
			abbrevモードをトグルします
		hira
			ひらがなモードへ切り替えます
		midasi
			見出しモードへ切り替えます
		midasi_toggle
			見出しモードをトグルします
		select
			選択モードへ切り替えます
			既に選択モードの場合は、次の候補を選択します
			見出しモードでない場合は無効です
		next
			次の候補を選択します
		prev
			前の候補を選択します
		select_top
			先頭の候補で確定します
		complete
			変換を確定します
			選択モードでない場合は無効です
		cancel
			選択モードのキャンセル
			一番上の候補(無変換)で確定します
		delete
			選択中の候補をユーザー辞書と変換履歴から
			削除します
    delete: '<C-d>',
		prefix
			接頭辞や接尾辞を指定するためのキーです
			特殊な要件がないかぎり変更しないでください
	roman_table
		ローマ字入力の追加・上書き設定です
		例: `{ kn: 'かん' }`
	getcurpos
		画面上のカーソル位置を返却するfuncrefです
		ポップアップなどの表示位置を微調整したい場合は
		以下の関数を用意しpos.colとpos.lineを増減等させ
		カーソル位置を返却してください
>
		foo(pos: any): any
<
	run_on_midasi
		vim9skkが有効になったとき、変換が確定したときに
		即座に見出しモードに移行します

	デフォルト
>
		jisyo: ['~/SKK-JISYO.L:EUC-JP', '~/SKK-JISYO.*.utf8:UTF8'],
		jisyo_user: '~/VIM9SKK-JISYO.user',
		jisyo_recent: '~/VIM9SKK-JISYO.recent',
		recent: 1000,
		parens: [
			'（）', '〔〕', '［］', '｛｝', '〈〉',
			'《》', '「」', '『』', '【】'
		],
		mode_label: {
			off: '_A',
			hira: 'あ',
			kata: 'ア',
			hankaku: 'ｶﾅ',
			alphabet: 'Ａ',
			abbr: 'ab',
			midasi: '▽',
		},
		mode_label_timeout: 3000,
		popup_maxheight: 20,
		search_limit: 100,
		disable_default_mappings: false
		keymap: {
			toggle: '<C-j>',
			enable: '',
			disable: '',
			kata: 'q',
			hankaku: '<C-q>',
			alphabet: 'L',
			abbr: '/',
			midasi: 'Q',
			select: '<Space>',
			next: '<Tab>',
			prev: ['<S-Tab>', 'x'],
			complete: '<CR>',
			cancel: '<C-g>',
			delete: '<C-d>',
			prefix: '>',
		},
<

g:vim9skk_midasi				*g:vim9skk_midasi*
	見出しモードの入力値

------------------------------------------------------------------------------
COMMANDS					*vim9skk-commands*

:Vim9skkTerminalInput				*:Vim9skkTerminalInput*
	terminalに入力するための入力プロンプトを表示します

:Vim9skkReloadJisyo				*:Vim9skkReloadJisyo*
	辞書を再読み込みします

:Vim9skkRegisterToUserJisyo {見出し}		*:Vim9skkRegisterToUserJisyo*
	ユーザー辞書に登録します


------------------------------------------------------------------------------
FUNCTIONS					*vim9skk-functions*

vim9skk#Enable()				*vim9skkEnable*
	vim9skkを有効にします

vim9skk#Disable()				*vim9skkDisable*
	vim9skkを無効にします

vim9skk#Toggle()				*vim9skkToggle*
	有効・無効を切り替えます

vim9skk#ReadJisyo({パス})			*vim9skkReadJisyo*
	パスで指定した辞書を読み込み、
	{ line: list<string>, enc: string }
	をreturnします

------------------------------------------------------------------------------
EVENTS						*vim9skk-events*

Vim9skkInitPre					*Vim9skkInitPre*
	vim9skkが初めて有効になり初期化される前に発火します

Vim9skkEnter					*Vim9skkEnter*
	`g:vim9skk_mode`が有効になったときに発火します

Vim9skkLever					*Vim9skkLeave*
	`g:vim9skk_mode`が無効になったときに発火します

Vim9skkModeChanged				*Vim9skkModeChanged*
	`g:vim9skk_mode`が変更されたときに発火します
	`Vim9Disabled`や`Vim9Disabled`の前にも発火します

Vim9skkMidasiInput				*Vim9skkMidasiInput*
	見出しモードで入力されたときに発火します
	`g:vim9skk_mdasi`で見出しの入力値を取得できます

Vim9skkAbbrInput				*Vim9skkAbbrInput*
	Abbrモードで入力されたときに発火します
	`g:vim9skk_mdasi`で見出しの入力値を取得できます
	(`g:vim9skk_abbr`の方がいいかな…検討中)

------------------------------------------------------------------------------
HIGHLIGHTS					*vim9skk-highlights*

vim9skkMidasi		変換対象の色
vim9skkModeOff		変換モードポップアップの色(vim9skkオフの場合)
vim9skkModeHira		変換モードポップアップの色(ひらがな)
vim9skkModeKata		変換モードポップアップの色(カタカナ)
vim9skkModeHankaku	変換モードポップアップの色(半角)
vim9skkModeAlphabet	変換モードポップアップの色(アルファベット)
vim9skkModeAbbr		変換モードポップアップの色(abbrev)

==============================================================================
TODO						*vim9skk-todo*

- [x] プラグインの名前これでいいのか？と思ったが今さらもう遅い
- [ ] 設定項目を整理する
- [ ] 色を指定をできるようにする
- [ ] 見出しモードじゃなくても予測変換を表示したい
- [x] 予測変換を連鎖させたい


==============================================================================
CHANGELOG					*vim9skk-changelog*


==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
